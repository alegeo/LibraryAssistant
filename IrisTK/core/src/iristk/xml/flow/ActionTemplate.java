//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.11.18 at 02:26:56 PM CET 
//


package iristk.xml.flow;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAnyAttribute;
import javax.xml.bind.annotation.XmlAnyElement;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlElementRefs;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;
import javax.xml.namespace.QName;
import com.sun.xml.internal.bind.Locatable;
import com.sun.xml.internal.bind.annotation.XmlLocation;
import org.xml.sax.Locator;


/**
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{iristk.flow}param" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;group ref="{iristk.flow}action" maxOccurs="unbounded"/>
 *       &lt;/sequence>
 *       &lt;attGroup ref="{iristk.flow}templateAttributes"/>
 *       &lt;anyAttribute namespace='##other'/>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "param",
    "action"
})
@XmlRootElement(name = "action-template")
public class ActionTemplate implements Locatable
{

    protected List<Param> param;
    @XmlElementRefs({
        @XmlElementRef(name = "elseif", namespace = "iristk.flow", type = Elseif.class, required = false),
        @XmlElementRef(name = "reentry", namespace = "iristk.flow", type = Reentry.class, required = false),
        @XmlElementRef(name = "random", namespace = "iristk.flow", type = Random.class, required = false),
        @XmlElementRef(name = "block", namespace = "iristk.flow", type = Block.class, required = false),
        @XmlElementRef(name = "goto", namespace = "iristk.flow", type = Goto.class, required = false),
        @XmlElementRef(name = "return", namespace = "iristk.flow", type = Return.class, required = false),
        @XmlElementRef(name = "send", namespace = "iristk.flow", type = Send.class, required = false),
        @XmlElementRef(name = "else", namespace = "iristk.flow", type = Else.class, required = false),
        @XmlElementRef(name = "call", namespace = "iristk.flow", type = Call.class, required = false),
        @XmlElementRef(name = "propagate", namespace = "iristk.flow", type = Propagate.class, required = false),
        @XmlElementRef(name = "if", namespace = "iristk.flow", type = If.class, required = false),
        @XmlElementRef(name = "var", namespace = "iristk.flow", type = Var.class, required = false),
        @XmlElementRef(name = "wait", namespace = "iristk.flow", type = Wait.class, required = false),
        @XmlElementRef(name = "log", namespace = "iristk.flow", type = Log.class, required = false),
        @XmlElementRef(name = "raise", namespace = "iristk.flow", type = Raise.class, required = false),
        @XmlElementRef(name = "exec", namespace = "iristk.flow", type = Exec.class, required = false)
    })
    @XmlAnyElement(lax = true)
    protected List<Object> action;
    @XmlAttribute(name = "id", required = true)
    @XmlSchemaType(name = "anySimpleType")
    protected String id;
    @XmlAttribute(name = "static")
    protected Boolean _static;
    @XmlAnyAttribute
    private Map<QName, String> otherAttributes = new HashMap<QName, String>();
    @XmlLocation
    @XmlTransient
    protected Locator locator;

    /**
     * Gets the value of the param property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the param property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getParam().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Param }
     * 
     * 
     */
    public List<Param> getParam() {
        if (param == null) {
            param = new ArrayList<Param>();
        }
        return this.param;
    }

    /**
     * Gets the value of the action property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the action property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAction().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Elseif }
     * {@link Reentry }
     * {@link Random }
     * {@link Block }
     * {@link Goto }
     * {@link Return }
     * {@link Send }
     * {@link Else }
     * {@link Call }
     * {@link Propagate }
     * {@link If }
     * {@link Object }
     * {@link Wait }
     * {@link Var }
     * {@link Log }
     * {@link Raise }
     * {@link Exec }
     * 
     * 
     */
    public List<Object> getAction() {
        if (action == null) {
            action = new ArrayList<Object>();
        }
        return this.action;
    }

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setId(String value) {
        this.id = value;
    }

    /**
     * Gets the value of the static property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public boolean isStatic() {
        if (_static == null) {
            return false;
        } else {
            return _static;
        }
    }

    /**
     * Sets the value of the static property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setStatic(Boolean value) {
        this._static = value;
    }

    /**
     * Gets a map that contains attributes that aren't bound to any typed property on this class.
     * 
     * <p>
     * the map is keyed by the name of the attribute and 
     * the value is the string value of the attribute.
     * 
     * the map returned by this method is live, and you can add new attribute
     * by updating the map directly. Because of this design, there's no setter.
     * 
     * 
     * @return
     *     always non-null
     */
    public Map<QName, String> getOtherAttributes() {
        return otherAttributes;
    }

    @Override
	public Locator sourceLocation() {
        return locator;
    }

    public void setSourceLocation(Locator newLocator) {
        locator = newLocator;
    }

}
